To use a half-duplex bus between various PPB Arduino controllers, I need to guarantee that the
Arduino's only drive the serial transmit line while actually responsing to a link call.
The master, from controlling PC will use open drain driver.

In use, the master will send a message to a specific Arduino using addressing in the
FIdx byte. I expect 8 or less Arduinos (maybe even four or less). So I will use at most
top three bits for addressing. This will leave room for 32 commands in linklist. So far,
the most I have used is ten so this is likely to be very adequate.

After the slave receives a command block (wall to wall bytes), it will execute
the command (if it is intended target) and set it's TX to output mode. It will
then send the entire message via Serial.write() call.

It appears than my DoLink() state machine assumes it is called only once per millisecond
but in fact, I am calling it in idle loop.

Since I always allow at least 20 msec timeout on link calls, it seems pointless to call
every time through idle loop so better to call once a millisecond.

Anyway, I have a L_FINAL state which I enter from L_RSP state when I see that
buffer is empty. So when handling L_FINAL state I have a place to reset TX
to input.

The windows side needs to guarantee at least 1 msec after getting a response
before sending a new command.
